{"mappings":"ACCA,GAAI,CAAC,OAAO,gBAAgB,CAAE,CAC5B,IAAM,EAAQ,SAAS,cAAc,CAAC,aAEhC,EAAO,SAAS,sBAAsB,CAAC,QAAQ,CAAC,EAAE,CAClD,EAAW,SAAS,sBAAsB,CAAC,kCAAkC,CAAC,EAAE,CAatF,SAAS,IACP,EAAM,KAAK,CAAC,OAAO,CAAG,OACtB,aAAa,OAAO,CAAC,iBAAkB,SACzC,CAXmB,WAFA,aAAa,OAAO,CAAC,mBAGtC,CAAA,OAAO,MAAM,CAAG,WACd,WAAW,WACT,EAAM,KAAK,CAAC,OAAO,CAAG,OACxB,EAAG,KACL,CAAA,EAQE,GACF,CAAA,EAAK,OAAO,CAAG,CADjB,EAII,GACF,CAAA,EAAS,OAAO,CAAG,CADrB,EAKF,IAAI,EAAU,KACV,EAAS,KAGb,OAAO,gBAAgB,CAAC,qBAAsB,AAAC,IAC7C,EAAW,EAAM,MAAM,CAAC,QAAQ,CAChC,EAAS,EAAM,MAAM,CAAC,MAAM,CAC5B,QAAQ,GAAG,CAAC,6BAA8B,GAC1C,QAAQ,GAAG,CAAC,2BAA4B,EAC1C,GAGA,IAAM,EAAc,CAAC,EAAM,EAAO,EAAU,KAC1C,GAAI,CAAC,GAAY,CAAC,EAAQ,CACxB,QAAQ,KAAK,CAAC,iCACd,MACF,CAEA,IAAM,EAAU,CAAC,MAAM,EAAE,EAAK;OAAS,EAAE,EAAM;UAAY,EAAE,EAAS;aAAe,EAAE,EAAY,CAAC,CAEpG,GAAI,CAAC,EAAQ,IAAI,GAAI,CACnB,QAAQ,KAAK,CAAC,yBACd,MAAM,yBACN,MACF,CAEA,IAAM,EAAM,CAAC,4BAA4B,EAAE,EAAS,YAAY,CAAC,CAE3D,EAAO,CACX,QAAS,EACT,KAAM,CACR,EAEA,QAAQ,GAAG,CAAC,sBAAuB,GACnC,QAAQ,GAAG,CAAC,gBAAiB,GAE7B,MAAM,EAAK,CACT,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,SAAS,CAAC,EACvB,GACC,IAAI,CAAC,AAAA,GAAY,EAAS,IAAI,IAC9B,IAAI,CAAC,AAAA,IACA,EAAK,EAAE,CACT,MAAM,8BAEN,MAAM,kCAAoC,EAAK,WAAW,CAE9D,GACC,KAAK,CAAC,AAAA,IACL,QAAQ,KAAK,CAAC,SAAU,GACxB,MAAM,wBACR,EACF,EAEE,SAAS,aAAa,CAAC,sBAAsB,gBAAgB,CAAC,SAAU,SAAS,CAAK,EACpF,EAAM,cAAc,GACpB,IAAM,EAAO,SAAS,cAAc,CAAC,QAAQ,KAAK,EAAI,eAItD,EAAY,EAHE,SAAS,cAAc,CAAC,SAAS,KAAK,EAAI,eACvC,SAAS,cAAc,CAAC,YAAY,KAAK,EAAI,eAC1C,SAAS,cAAc,CAAC,eAAe,KAAK,EAAI,gBAEpE,IACA,IAAI,CAAC,KAAK,EACZ,GAEA,OAAO,gBAAgB,CAAG,CAAA,CAC5B","sources":["<anon>","src/js/modal-first.js"],"sourcesContent":["if (!window.modalInitialized) {\n    const modal = document.getElementById(\"modalHero\");\n    const span = document.getElementsByClassName(\"close\")[0];\n    const spanHero = document.getElementsByClassName(\"modal__close modal__close--hero\")[0];\n    // Проверяем состояние модального окна в localStorage\n    const modalState = localStorage.getItem(\"modalHeroState\");\n    if (modalState !== \"closed\") window.onload = function() {\n        setTimeout(function() {\n            modal.style.display = \"block\";\n        }, 15000); // 15000 миллисекунд = 15 секунд\n    };\n    function closeModal() {\n        modal.style.display = \"none\";\n        localStorage.setItem(\"modalHeroState\", \"closed\");\n    }\n    if (span) span.onclick = closeModal;\n    if (spanHero) spanHero.onclick = closeModal;\n    // Telegram bot \n    let botToken = null;\n    let chatId = null;\n    // Обработчик события для получения данных\n    window.addEventListener(\"firebaseDataLoaded\", (event)=>{\n        botToken = event.detail.botToken;\n        chatId = event.detail.chatId;\n        console.log(\"botToken in modalFirst.js:\", botToken);\n        console.log(\"chatId in modalFirst.js:\", chatId);\n    });\n    // Пример функции для отправки сообщения\n    const sendMessage = (name, phone, business, competitors)=>{\n        if (!botToken || !chatId) {\n            console.error(\"botToken or chatId is not set\");\n            return;\n        }\n        const message = `Name: ${name}\\nPhone: ${phone}\\nBusiness: ${business}\\nCompetitors: ${competitors}`;\n        if (!message.trim()) {\n            console.error(\"Message text is empty\");\n            alert(\"Message text is empty\");\n            return;\n        }\n        const url = `https://api.telegram.org/bot${botToken}/sendMessage`;\n        const data = {\n            chat_id: chatId,\n            text: message\n        };\n        console.log(\"Sending request to:\", url);\n        console.log(\"Request data:\", data);\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        }).then((response)=>response.json()).then((data)=>{\n            if (data.ok) alert(\"Message sent successfully!\");\n            else alert(\"Failed to send message. Error: \" + data.description);\n        }).catch((error)=>{\n            console.error(\"Error:\", error);\n            alert(\"Error sending message\");\n        });\n    };\n    document.querySelector(\".modal__form--hero\").addEventListener(\"submit\", function(event) {\n        event.preventDefault();\n        const name = document.getElementById(\"name\").value || \"\\u043D\\u0435 \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\";\n        const phone = document.getElementById(\"phone\").value || \"\\u043D\\u0435 \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\";\n        const business = document.getElementById(\"business\").value || \"\\u043D\\u0435 \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\";\n        const competitors = document.getElementById(\"competitors\").value || \"\\u043D\\u0435 \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\";\n        sendMessage(name, phone, business, competitors);\n        closeModal();\n        this.reset();\n    });\n    window.modalInitialized = true;\n}\n\n//# sourceMappingURL=index.e013b62c.js.map\n","\nif (!window.modalInitialized) {\n  const modal = document.getElementById(\"modalHero\");\n \n  const span = document.getElementsByClassName(\"close\")[0];\n  const spanHero = document.getElementsByClassName(\"modal__close modal__close--hero\")[0];\n\n  // Проверяем состояние модального окна в localStorage\n  const modalState = localStorage.getItem('modalHeroState');\n\n  if (modalState !== 'closed') {\n    window.onload = function() {\n      setTimeout(function() {\n        modal.style.display = \"block\";\n      }, 15000); // 15000 миллисекунд = 15 секунд\n    }\n  }\n\n  function closeModal() {\n    modal.style.display = \"none\";\n    localStorage.setItem('modalHeroState', 'closed');\n  }\n\n  if (span) {\n    span.onclick = closeModal;\n  }\n\n  if (spanHero) {\n    spanHero.onclick = closeModal;\n  }\n\n  // Telegram bot \nlet botToken= null;\nlet chatId = null;\n\n// Обработчик события для получения данных\nwindow.addEventListener('firebaseDataLoaded', (event) => {\n  botToken = event.detail.botToken;\n  chatId = event.detail.chatId;\n  console.log(\"botToken in modalFirst.js:\", botToken);\n  console.log(\"chatId in modalFirst.js:\", chatId);\n});\n\n// Пример функции для отправки сообщения\nconst sendMessage = (name, phone, business, competitors) => {\n  if (!botToken || !chatId) {\n    console.error('botToken or chatId is not set');\n    return;\n  }\n\n  const message = `Name: ${name}\\nPhone: ${phone}\\nBusiness: ${business}\\nCompetitors: ${competitors}`;\n\n  if (!message.trim()) {\n    console.error('Message text is empty');\n    alert('Message text is empty');\n    return;\n  }\n\n  const url = `https://api.telegram.org/bot${botToken}/sendMessage`;\n\n  const data = {\n    chat_id: chatId,\n    text: message\n  };\n\n  console.log(\"Sending request to:\", url);\n  console.log(\"Request data:\", data);\n\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  })\n  .then(response => response.json())\n  .then(data => {\n    if (data.ok) {\n      alert('Message sent successfully!');\n    } else {\n      alert('Failed to send message. Error: ' + data.description);\n    }\n  })\n  .catch(error => {\n    console.error('Error:', error);\n    alert('Error sending message');\n  });\n};\n\n  document.querySelector('.modal__form--hero').addEventListener('submit', function(event) {\n    event.preventDefault();\n    const name = document.getElementById('name').value || 'не заполнено';\n    const phone = document.getElementById('phone').value || 'не заполнено';\n    const business = document.getElementById('business').value || 'не заполнено';\n    const competitors = document.getElementById('competitors').value || 'не заполнено';\n    sendMessage(name, phone, business, competitors);\n    closeModal();\n    this.reset();\n  });\n\n  window.modalInitialized = true;\n} \n\n\n  "],"names":["window","modalInitialized","modal","document","getElementById","span","getElementsByClassName","spanHero","closeModal","style","display","localStorage","setItem","getItem","onload","setTimeout","onclick","botToken","chatId","addEventListener","event","detail","console","log","sendMessage","name","phone","business","competitors","error","message","trim","alert","url","data","chat_id","text","fetch","method","headers","body","JSON","stringify","then","response","json","ok","description","catch","querySelector","preventDefault","value","reset"],"version":3,"file":"index.e013b62c.js.map"}