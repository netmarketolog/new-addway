{"mappings":"A,I,EEEA,AAFiB,SAAS,aAAa,CAAC,cAE/B,gBAAgB,CAAC,QAE1B,WACE,OAAO,QAAQ,CAAC,CACd,IAAK,EACL,SAAU,QACZ,EACF,GCTC,AAAA,CAAA,KACC,IAAM,EAAO,CACX,YAAa,SAAS,aAAa,CAAC,sBACpC,aAAc,SAAS,aAAa,CAAC,uBACrC,WAAY,SAAS,gBAAgB,CAAC,kBACtC,KAAM,SAAS,aAAa,CAAC,WAC7B,KAAM,SAAS,aAAa,CAAC,OAC/B,EAKA,SAAS,IACP,EAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAC3B,EAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAC7B,CANA,EAAK,WAAW,CAAC,gBAAgB,CAAC,QAAS,GAC3C,EAAK,YAAY,CAAC,gBAAgB,CAAC,QAAS,GAO5C,EAAK,UAAU,CAAC,OAAO,CAAC,AAAA,IACtB,EAAO,gBAAgB,CAAC,QAAS,WAG/B,AAFiB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAE7C,SAAS,CAAC,MAAM,CAAC,OAC5B,EACF,EACF,CAAA,ICvBE,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,IAAM,EAAS,SAAS,aAAa,CAAC,WAEhC,EAAO,OAAO,QAAQ,CAAC,QAAQ,AAEjC,AAAS,CAAA,MAAT,GAAgB,AAAS,gBAAT,EAClB,EAAO,SAAS,CAAC,GAAG,CAAC,eAErB,EAAO,SAAS,CAAC,GAAG,CAAC,oBAEzB,GAIA,SAAS,gBAAgB,CAAC,mBAAoB,WAC5C,SAAS,IACP,IAAM,EAAY,SAAS,aAAa,CAAC,WACnC,EAAW,SAAS,aAAa,CAAC,mBAClC,EAAa,SAAS,aAAa,CAAC,oBAEtC,EAAc,OAAO,UAAU,CAWjC,IAVmB,EAAU,WAAW,CAM1C,EAAW,SAAS,CAAG,GAEvB,QAAQ,GAAG,CAAC,cAAe,GACtB,EAAc,KACV,GAAK,EAAS,QAAQ,CAAC,MAAM,EAClC,EAAW,WAAW,CAAC,EAAS,QAAQ,CAAC,EAAE,CAoCjD,CAGA,IACA,OAAO,gBAAgB,CAAC,SAAU,EACpC,G,E,C,EE1EF,EAAiB,KAAK,KAAK,CAAC,o0BLK5B,AAAA,e,EIFE,IAAM,EAAa,OAAO,QAAQ,CAAC,QAAQ,CAErC,EAAgB,A,C,C,EAAA,I,E,U,C,E,O,C,C,CAAW,CAAC,EAAW,CAE7C,GAAI,CAAC,EAAe,OAEpB,IAAM,EAAoB,SAAS,aAAa,CAAC,kBAE3C,EAAS,EACZ,GAAG,CAAC,AAAA,GACI,CAAC,SAAS,EAAE,EAAG,IAAI,CAAC,WAAW,EAAE,EAAG,IAAI,CAAC,EAAE,EAAE,EAAG,KAAK,CAAC,SAAS,CAAC,EAExE,IAAI,CAAC,GAER,CAAA,EAAkB,SAAS,CAAG,CAChC","sources":["<anon>","src/index.js","src/js/scroll-to-top.js","src/js/burgerMenu.js","src/js/header.js","src/js/breadcrumbs.js","src/breadcrumbs.json"],"sourcesContent":["(function () {\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nconst $6325c7dcddb2ec4f$var$scrollUp = document.querySelector(\".scroll_up\");\n$6325c7dcddb2ec4f$var$scrollUp.addEventListener(\"click\", $6325c7dcddb2ec4f$var$onScrollUp);\nfunction $6325c7dcddb2ec4f$var$onScrollUp() {\n    window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n    });\n}\n\n\n(()=>{\n    const refs = {\n        openMenuBtn: document.querySelector(\".header-menu__open\"),\n        closeMenuBtn: document.querySelector(\".header-menu__close\"),\n        siteNavBtn: document.querySelectorAll(\".site-nav__btn\"),\n        menu: document.querySelector(\".burger\"),\n        body: document.querySelector(\"body\")\n    };\n    refs.openMenuBtn.addEventListener(\"click\", toggleMenu);\n    refs.closeMenuBtn.addEventListener(\"click\", toggleMenu);\n    function toggleMenu() {\n        refs.menu.classList.toggle(\"open\");\n        refs.body.classList.toggle(\"no-scroll\");\n    }\n    refs.siteNavBtn.forEach((button)=>{\n        button.addEventListener(\"click\", function() {\n            const dropdown = this.parentElement.nextElementSibling;\n            dropdown.classList.toggle(\"open\");\n        });\n    });\n})();\n\n\n(()=>{\n    document.addEventListener(\"DOMContentLoaded\", ()=>{\n        const header = document.querySelector(\".header\");\n        const path = window.location.pathname;\n        if (path === \"/\" || path === \"/index.html\") header.classList.add(\"home-header\");\n        else header.classList.add(\"other-page-header\");\n    });\n})();\n(()=>{\n    document.addEventListener(\"DOMContentLoaded\", function() {\n        function updateMenu() {\n            const container = document.querySelector(\".burger\");\n            const menuList = document.querySelector(\".site-nav__list\");\n            const moreButton = document.querySelector(\".more-menu__list\");\n            let screenWidth = window.innerWidth;\n            let containerWidth = container.clientWidth;\n            let totalWidth = 0;\n            let index = 0;\n            // console.log('containerWidth', containerWidth = 1280 || );\n            // Очистим блок с \"More...\" перед обновлением\n            moreButton.innerHTML = \"\";\n            // moreButton.style.display = 'none';\n            console.log(\"screenWidth\", screenWidth);\n            screenWidth = 1280;\n            while(3 <= menuList.children.length)moreButton.appendChild(menuList.children[3]);\n        // Найдем индекс первого элемента, который не помещается\n        // while (\n        //   index < menuList.children.length &&\n        //   totalWidth + menuList.children[index].offsetWidth <= containerWidth\n        // ) {\n        //   console.log(' в menuList.children.length', menuList.children.length);\n        //   totalWidth += menuList.children[index].offsetWidth;\n        //   index++;\n        //   console.log('totalWidth', totalWidth);\n        //   console.log('index', index);\n        // }\n        // // index = index - 1;\n        // console.log('posle index', index);\n        // console.log('posle totalWidth', totalWidth);\n        // console.log('posle menuList.children.length', menuList.children.length);\n        // // Перемещаем элементы, которые не помещаются, и один предыдущий элемент в блок \"More...\"\n        // if (index < menuList.children.length) {\n        //   moreButton.style.display = 'block'; // Показываем блок с \"More...\"\n        //   // Перемещаем один элемент перед началом группы невидимых элементов и все последующие\n        //   if (index < menuList.children.length) {\n        //     moreButton.appendChild(menuList.children[index]);\n        //   }\n        //   // Перемещаем все оставшиеся элементы в блок \"More...\"\n        //   while (index < menuList.children.length) {\n        //     moreButton.appendChild(menuList.children[index]);\n        //   }\n        // }\n        // console.log('moreButton', moreButton);\n        }\n        // Вызовем функцию при загрузке страницы и при изменении размера окна\n        updateMenu();\n        window.addEventListener(\"resize\", updateMenu);\n    });\n})(); // (() => {\n //   document.addEventListener('DOMContentLoaded', function () {\n //     function updateMenu() {\n //       const container = document.querySelector('.burger');\n //       const menuList = document.querySelector('.site-nav__list');\n //       const moreButton = document.querySelector('.more-menu-list');\n //       let containerWidth = container.clientWidth;\n //       let totalWidth = 0;\n //       let index = 0;\n //       console.log('containerWidth', containerWidth);\n //       // Очистим блок с \"More...\" перед обновлением\n //       moreButton.innerHTML = '';\n //       moreButton.style.display = 'none';\n //       console.log('do menuList.children.length', menuList.children.length);\n //       // Найдем индекс первого элемента, который не помещается\n //       while (\n //         index < menuList.children.length &&\n //         totalWidth + menuList.children[index].offsetWidth <= containerWidth\n //       ) {\n //         console.log(' в menuList.children.length', menuList.children.length);\n //         totalWidth += menuList.children[index].offsetWidth;\n //         index++;\n //         console.log('totalWidth', totalWidth);\n //         console.log('index', index);\n //       }\n //       // index = index - 1;\n //       console.log('posle index', index);\n //       console.log('posle totalWidth', totalWidth);\n //       console.log('posle menuList.children.length', menuList.children.length);\n //       // Перемещаем элементы, которые не помещаются, и один предыдущий элемент в блок \"More...\"\n //       if (index < menuList.children.length) {\n //         moreButton.style.display = 'block'; // Показываем блок с \"More...\"\n //         // Перемещаем один элемент перед началом группы невидимых элементов и все последующие\n //         if (index < menuList.children.length) {\n //           moreButton.appendChild(menuList.children[index]);\n //         }\n //         // Перемещаем все оставшиеся элементы в блок \"More...\"\n //         while (index < menuList.children.length) {\n //           moreButton.appendChild(menuList.children[index]);\n //         }\n //       }\n //       console.log('moreButton', moreButton);\n //     }\n //     // Вызовем функцию при загрузке страницы и при изменении размера окна\n //     updateMenu();\n //     window.addEventListener('resize', updateMenu);\n //   });\n // })();\n\n\nvar $7bff5e7ee61c70e3$exports = {};\n$7bff5e7ee61c70e3$exports = JSON.parse('{\"/about-us\":[{\"title\":\"\\u0413\\u043E\\u043B\\u043E\\u0432\\u043D\\u0430\",\"path\":\"./\"},{\"title\":\"\\u041F\\u0440\\u043E \\u043A\\u043E\\u043C\\u043F\\u0430\\u043D\\u0456\\u044E\",\"path\":\"./about\"}],\"/services\":[{\"title\":\"\\u0413\\u043E\\u043B\\u043E\\u0432\\u043D\\u0430\",\"path\":\"./\"},{\"title\":\"\\u041F\\u043E\\u0441\\u043B\\u0443\\u0433\\u0438\",\"path\":\"./services\"}],\"/pr\":[{\"title\":\"\\u0413\\u043E\\u043B\\u043E\\u0432\\u043D\\u0430\",\"path\":\"./\"},{\"title\":\"\\u041F\\u043E\\u0441\\u043B\\u0443\\u0433\\u0438\",\"path\":\"./services\"},{\"title\":\"PR\",\"path\":\"./pr\"}],\"/design\":[{\"title\":\"\\u0413\\u043E\\u043B\\u043E\\u0432\\u043D\\u0430\",\"path\":\"./\"},{\"title\":\"\\u041F\\u043E\\u0441\\u043B\\u0443\\u0433\\u0438\",\"path\":\"./services\"},{\"title\":\"Design\",\"path\":\"./design\"}],\"/smm\":[{\"title\":\"\\u0413\\u043E\\u043B\\u043E\\u0432\\u043D\\u0430\",\"path\":\"./\"},{\"title\":\"\\u041F\\u043E\\u0441\\u043B\\u0443\\u0433\\u0438\",\"path\":\"./services\"},{\"title\":\"SMM\",\"path\":\"./smm\"}],\"/digital\":[{\"title\":\"\\u0413\\u043E\\u043B\\u043E\\u0432\\u043D\\u0430\",\"path\":\"./\"},{\"title\":\"\\u041F\\u043E\\u0441\\u043B\\u0443\\u0433\\u0438\",\"path\":\"./services\"},{\"title\":\"Digital\",\"path\":\"./digital\"}],\"/vacancies\":[{\"title\":\"\\u0413\\u043E\\u043B\\u043E\\u0432\\u043D\\u0430\",\"path\":\"./\"},{\"title\":\"\\u0412\\u0430\\u043A\\u0430\\u043D\\u0441\\u0456\\u0457\",\"path\":\"./vacancies\"}],\"/testimonials\":[{\"title\":\"\\u0413\\u043E\\u043B\\u043E\\u0432\\u043D\\u0430\",\"path\":\"./\"},{\"title\":\"\\u0412\\u0456\\u0434\\u0433\\u0443\\u043A\\u0438 \\u043F\\u0440\\u043E \\u043D\\u0430\\u0441\",\"path\":\"./testimonials\"}]}');\n\n\nfunction $839c67f246f40706$export$2e2bcd8739ae039() {\n    const currentUrl = window.location.pathname;\n    const locationArray = (0, (/*@__PURE__*/$parcel$interopDefault($7bff5e7ee61c70e3$exports)))[currentUrl];\n    if (!locationArray) return;\n    const breadcrumbWrapper = document.querySelector(\".breadcrumb>ul\");\n    const markup = locationArray.map((it)=>{\n        return `<li key=\"${it.path}\"><a href=\"${it.path}\">${it.title}</a></li>`;\n    }).join(\"\");\n    breadcrumbWrapper.innerHTML = markup;\n}\n\n\n(0, $839c67f246f40706$export$2e2bcd8739ae039)();\n\n})();\n//# sourceMappingURL=about-us.f20ee560.js.map\n","import './js/scroll-to-top';\nimport './js/burgerMenu';\nimport './js/header';\nimport getBreadcrumbs from './js/breadcrumbs';\n\ngetBreadcrumbs();\n","const scrollUp = document.querySelector('.scroll_up');\n\nscrollUp.addEventListener('click', onScrollUp);\n\nfunction onScrollUp() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n","(() => {\n  const refs = {\n    openMenuBtn: document.querySelector('.header-menu__open'),\n    closeMenuBtn: document.querySelector('.header-menu__close'),\n    siteNavBtn: document.querySelectorAll('.site-nav__btn'),\n    menu: document.querySelector('.burger'),\n    body: document.querySelector('body'),\n  };\n\n  refs.openMenuBtn.addEventListener('click', toggleMenu);\n  refs.closeMenuBtn.addEventListener('click', toggleMenu);\n\n  function toggleMenu() {\n    refs.menu.classList.toggle('open');\n    refs.body.classList.toggle('no-scroll');\n  }\n\n  refs.siteNavBtn.forEach(button => {\n    button.addEventListener('click', function () {\n      const dropdown = this.parentElement.nextElementSibling;\n\n      dropdown.classList.toggle('open');\n    });\n  });\n})();\n","(() => {\n  document.addEventListener('DOMContentLoaded', () => {\n    const header = document.querySelector('.header');\n\n    const path = window.location.pathname;\n\n    if (path === '/' || path === '/index.html') {\n      header.classList.add('home-header');\n    } else {\n      header.classList.add('other-page-header');\n    }\n  });\n})();\n\n(() => {\n  document.addEventListener('DOMContentLoaded', function () {\n    function updateMenu() {\n      const container = document.querySelector('.burger');\n      const menuList = document.querySelector('.site-nav__list');\n      const moreButton = document.querySelector('.more-menu__list');\n\n      let screenWidth = window.innerWidth;\n      let containerWidth = container.clientWidth;\n      let totalWidth = 0;\n      let index = 0;\n      // console.log('containerWidth', containerWidth = 1280 || );\n\n      // Очистим блок с \"More...\" перед обновлением\n      moreButton.innerHTML = '';\n      // moreButton.style.display = 'none';\n      console.log('screenWidth', screenWidth);\n      if ((screenWidth = 1280)) {\n        while (3 <= menuList.children.length) {\n          moreButton.appendChild(menuList.children[3]);\n        }\n      }\n      // Найдем индекс первого элемента, который не помещается\n      // while (\n      //   index < menuList.children.length &&\n      //   totalWidth + menuList.children[index].offsetWidth <= containerWidth\n      // ) {\n      //   console.log(' в menuList.children.length', menuList.children.length);\n\n      //   totalWidth += menuList.children[index].offsetWidth;\n      //   index++;\n      //   console.log('totalWidth', totalWidth);\n      //   console.log('index', index);\n      // }\n\n      // // index = index - 1;\n\n      // console.log('posle index', index);\n      // console.log('posle totalWidth', totalWidth);\n      // console.log('posle menuList.children.length', menuList.children.length);\n      // // Перемещаем элементы, которые не помещаются, и один предыдущий элемент в блок \"More...\"\n      // if (index < menuList.children.length) {\n      //   moreButton.style.display = 'block'; // Показываем блок с \"More...\"\n\n      //   // Перемещаем один элемент перед началом группы невидимых элементов и все последующие\n      //   if (index < menuList.children.length) {\n      //     moreButton.appendChild(menuList.children[index]);\n      //   }\n\n      //   // Перемещаем все оставшиеся элементы в блок \"More...\"\n      //   while (index < menuList.children.length) {\n      //     moreButton.appendChild(menuList.children[index]);\n      //   }\n      // }\n      // console.log('moreButton', moreButton);\n    }\n\n    // Вызовем функцию при загрузке страницы и при изменении размера окна\n    updateMenu();\n    window.addEventListener('resize', updateMenu);\n  });\n})();\n// (() => {\n//   document.addEventListener('DOMContentLoaded', function () {\n//     function updateMenu() {\n//       const container = document.querySelector('.burger');\n//       const menuList = document.querySelector('.site-nav__list');\n//       const moreButton = document.querySelector('.more-menu-list');\n\n//       let containerWidth = container.clientWidth;\n//       let totalWidth = 0;\n//       let index = 0;\n//       console.log('containerWidth', containerWidth);\n\n//       // Очистим блок с \"More...\" перед обновлением\n//       moreButton.innerHTML = '';\n//       moreButton.style.display = 'none';\n//       console.log('do menuList.children.length', menuList.children.length);\n//       // Найдем индекс первого элемента, который не помещается\n//       while (\n//         index < menuList.children.length &&\n//         totalWidth + menuList.children[index].offsetWidth <= containerWidth\n//       ) {\n//         console.log(' в menuList.children.length', menuList.children.length);\n\n//         totalWidth += menuList.children[index].offsetWidth;\n//         index++;\n//         console.log('totalWidth', totalWidth);\n//         console.log('index', index);\n//       }\n\n//       // index = index - 1;\n\n//       console.log('posle index', index);\n//       console.log('posle totalWidth', totalWidth);\n//       console.log('posle menuList.children.length', menuList.children.length);\n//       // Перемещаем элементы, которые не помещаются, и один предыдущий элемент в блок \"More...\"\n//       if (index < menuList.children.length) {\n//         moreButton.style.display = 'block'; // Показываем блок с \"More...\"\n\n//         // Перемещаем один элемент перед началом группы невидимых элементов и все последующие\n//         if (index < menuList.children.length) {\n//           moreButton.appendChild(menuList.children[index]);\n//         }\n\n//         // Перемещаем все оставшиеся элементы в блок \"More...\"\n//         while (index < menuList.children.length) {\n//           moreButton.appendChild(menuList.children[index]);\n//         }\n//       }\n//       console.log('moreButton', moreButton);\n//     }\n\n//     // Вызовем функцию при загрузке страницы и при изменении размера окна\n//     updateMenu();\n//     window.addEventListener('resize', updateMenu);\n//   });\n// })();\n","import breadcrumbs from '../breadcrumbs.json';\n\nexport default function getBreadcrumbs() {\n  const currentUrl = window.location.pathname;\n\n  const locationArray = breadcrumbs[currentUrl];\n\n  if (!locationArray) return;\n\n  const breadcrumbWrapper = document.querySelector('.breadcrumb>ul');\n\n  const markup = locationArray\n    .map(it => {\n      return `<li key=\"${it.path}\"><a href=\"${it.path}\">${it.title}</a></li>`;\n    })\n    .join('');\n\n  breadcrumbWrapper.innerHTML = markup;\n}\n","{\n  \"/about-us\": [\n    { \"title\": \"Головна\", \"path\": \"./\" },\n    { \"title\": \"Про компанію\", \"path\": \"./about\" }\n  ],\n  \"/services\": [\n    { \"title\": \"Головна\", \"path\": \"./\" },\n    { \"title\": \"Послуги\", \"path\": \"./services\" }\n  ],\n  \"/pr\": [\n    { \"title\": \"Головна\", \"path\": \"./\" },\n    { \"title\": \"Послуги\", \"path\": \"./services\" },\n    { \"title\": \"PR\", \"path\": \"./pr\" }\n  ],\n  \"/design\": [\n    { \"title\": \"Головна\", \"path\": \"./\" },\n    { \"title\": \"Послуги\", \"path\": \"./services\" },\n    { \"title\": \"Design\", \"path\": \"./design\" }\n  ],\n  \"/smm\": [\n    { \"title\": \"Головна\", \"path\": \"./\" },\n    { \"title\": \"Послуги\", \"path\": \"./services\" },\n    { \"title\": \"SMM\", \"path\": \"./smm\" }\n  ],\n  \"/digital\": [\n    { \"title\": \"Головна\", \"path\": \"./\" },\n    { \"title\": \"Послуги\", \"path\": \"./services\" },\n    { \"title\": \"Digital\", \"path\": \"./digital\" }\n  ],\n  \"/vacancies\": [\n    { \"title\": \"Головна\", \"path\": \"./\" },\n    { \"title\": \"Вакансії\", \"path\": \"./vacancies\" }\n  ],\n  \"/testimonials\": [\n    { \"title\": \"Головна\", \"path\": \"./\" },\n    { \"title\": \"Відгуки про нас\", \"path\": \"./testimonials\" }\n  ]\n}\n"],"names":["$7bff5e7ee61c70e3$exports","$6325c7dcddb2ec4f$var$scrollUp","document","querySelector","addEventListener","window","scrollTo","top","behavior","refs","openMenuBtn","closeMenuBtn","siteNavBtn","querySelectorAll","menu","body","toggleMenu","classList","toggle","forEach","button","dropdown","parentElement","nextElementSibling","header","path","location","pathname","add","updateMenu","container","menuList","moreButton","screenWidth","innerWidth","clientWidth","innerHTML","console","log","children","length","appendChild","JSON","parse","a","currentUrl","locationArray","__esModule","default","breadcrumbWrapper","markup","map","it","title","join"],"version":3,"file":"about-us.f20ee560.js.map"}